name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.25"
          cache: true

      - name: Install Protocol Buffers compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Generate Proto Files
        run: |
          ./scripts/generate-proto.sh

      - name: Update Go dependencies
        run: |
          cd src
          go mod tidy

      - name: Build Binary
        run: |
          ./scripts/build.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: bin/
          retention-days: 1

  docker-build:
    name: Build Docker Image (linux/${{ matrix.platform }})
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set lowercase repo owner
        run: echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: bin/

      - name: Verify and prepare binaries
        run: |
          ls -lh bin/
          chmod +x bin/*
          # Verify the specific binary exists for this platform
          if [ ! -f "bin/clamav-api-linux-${{ matrix.platform }}" ]; then
            echo "Error: Binary bin/clamav-api-linux-${{ matrix.platform }} not found"
            exit 1
          fi
          echo "Binary found: bin/clamav-api-linux-${{ matrix.platform }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image for linux/${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.platform }}
          push: true
          tags: ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }}-linux-${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          build-args: |
            TARGETARCH=${{ matrix.platform }}

  create-manifests:
    name: Create Multi-Arch Manifests
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Set lowercase repo owner
        run: echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest for clamav-api
        run: |
          docker manifest create ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }} \
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }}-linux-amd64 \
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }}-linux-arm64
          docker manifest push ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }}

      - name: Create and push latest tag
        run: |
          docker manifest create ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:latest \
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }}-linux-amd64 \
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:${{ github.ref_name }}-linux-arm64
          docker manifest push ghcr.io/${{ env.REPO_OWNER_LOWER }}/clamav-api:latest

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: create-manifests
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: bin/

      - name: Generate Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configurationJson: |
            {
              "categories": [
                {
                  "title": "## üöÄ Features",
                  "labels": ["feature", "enhancement"]
                },
                {
                  "title": "## üêõ Fixes",
                  "labels": ["fix", "bug"]
                },
                {
                  "title": "## üì¶ Dependencies",
                  "labels": ["dependencies"]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/*
          body: ${{steps.changelog.outputs.changelog}}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
